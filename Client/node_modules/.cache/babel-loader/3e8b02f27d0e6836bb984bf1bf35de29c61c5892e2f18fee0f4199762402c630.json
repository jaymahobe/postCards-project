{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { createUser } from \"./AuthApi\";\nconst initialState = {\n  loggedInUser: null,\n  isSuccess: false,\n  status: \"idle\",\n  error: null // Add an error state\n};\nexport const createUserAsync = createAsyncThunk(\"auth/createUser\", async userData => {\n  const response = await createUser(userData);\n  return response.data;\n});\nexport const AuthSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    clearUser: state => {\n      state.loggedInUser = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(createUserAsync.pending, state => {\n      state.status = \"pending\";\n      state.error = null; // Clear any previous errors\n    }).addCase(createUserAsync.fulfilled, (state, action) => {\n      state.status = \"idle\";\n      state.loggedInUser = action.payload;\n      state.isSuccess = true;\n      // Potentially store JWT token, e.g.:\n      // localStorage.setItem('token', action.payload.token);\n    }).addCase(createUserAsync.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.isSuccess = false;\n      state.error = action.error; // Capture the error message\n    });\n  }\n});\nexport const {\n  clearUser\n} = AuthSlice.actions;\nexport const selectLoggedInUser = state => state.auth.loggedInUser;\nexport const selectAuthStatus = state => state.auth.status;\nexport const selectAuthSuccess = state => state.auth.isSuccess;\nexport const selectAuthError = state => state.auth.error;\nexport default AuthSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","createUser","initialState","loggedInUser","isSuccess","status","error","createUserAsync","userData","response","data","AuthSlice","name","reducers","clearUser","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","selectLoggedInUser","auth","selectAuthStatus","selectAuthSuccess","selectAuthError","reducer"],"sources":["/Users/jaymahobe/project-js/project-postlist-internsala/app/src/Auth/AuthSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { createUser } from \"./AuthApi\";\n\nconst initialState = {\n  loggedInUser: null,\n  isSuccess: false,\n  status: \"idle\",\n  error: null, // Add an error state\n};\n\nexport const createUserAsync = createAsyncThunk(\n  \"auth/createUser\",\n  async (userData) => {\n    const response = await createUser(userData);\n    return response.data;\n  }\n);\n\nexport const AuthSlice = createSlice({\n  name: \"auth\",\n  initialState,\n\n  reducers: {\n    clearUser: (state) => {\n      state.loggedInUser = null;\n    },\n  },\n\n  extraReducers: (builder) => {\n    builder\n      .addCase(createUserAsync.pending, (state) => {\n        state.status = \"pending\";\n        state.error = null; // Clear any previous errors\n      })\n      .addCase(createUserAsync.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.loggedInUser = action.payload;\n        state.isSuccess = true;\n        // Potentially store JWT token, e.g.:\n        // localStorage.setItem('token', action.payload.token);\n      })\n      .addCase(createUserAsync.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.isSuccess = false;\n        state.error = action.error; // Capture the error message\n      });\n  },\n});\nexport const { clearUser } = AuthSlice.actions;\nexport const selectLoggedInUser = (state) => state.auth.loggedInUser;\nexport const selectAuthStatus = (state) => state.auth.status;\nexport const selectAuthSuccess = (state) => state.auth.isSuccess;\nexport const selectAuthError = (state) => state.auth.error;\nexport default AuthSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,UAAU,QAAQ,WAAW;AAEtC,MAAMC,YAAY,GAAG;EACnBC,YAAY,EAAE,IAAI;EAClBC,SAAS,EAAE,KAAK;EAChBC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE,IAAI,CAAE;AACf,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGR,gBAAgB,CAC7C,iBAAiB,EACjB,MAAOS,QAAQ,IAAK;EAClB,MAAMC,QAAQ,GAAG,MAAMR,UAAU,CAACO,QAAQ,CAAC;EAC3C,OAAOC,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGX,WAAW,CAAC;EACnCY,IAAI,EAAE,MAAM;EACZV,YAAY;EAEZW,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAK,IAAK;MACpBA,KAAK,CAACZ,YAAY,GAAG,IAAI;IAC3B;EACF,CAAC;EAEDa,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACX,eAAe,CAACY,OAAO,EAAGJ,KAAK,IAAK;MAC3CA,KAAK,CAACV,MAAM,GAAG,SAAS;MACxBU,KAAK,CAACT,KAAK,GAAG,IAAI,CAAC,CAAC;IACtB,CAAC,CAAC,CACDY,OAAO,CAACX,eAAe,CAACa,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MACrDN,KAAK,CAACV,MAAM,GAAG,MAAM;MACrBU,KAAK,CAACZ,YAAY,GAAGkB,MAAM,CAACC,OAAO;MACnCP,KAAK,CAACX,SAAS,GAAG,IAAI;MACtB;MACA;IACF,CAAC,CAAC,CACDc,OAAO,CAACX,eAAe,CAACgB,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MACpDN,KAAK,CAACV,MAAM,GAAG,QAAQ;MACvBU,KAAK,CAACX,SAAS,GAAG,KAAK;MACvBW,KAAK,CAACT,KAAK,GAAGe,MAAM,CAACf,KAAK,CAAC,CAAC;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAAEQ;AAAU,CAAC,GAAGH,SAAS,CAACa,OAAO;AAC9C,OAAO,MAAMC,kBAAkB,GAAIV,KAAK,IAAKA,KAAK,CAACW,IAAI,CAACvB,YAAY;AACpE,OAAO,MAAMwB,gBAAgB,GAAIZ,KAAK,IAAKA,KAAK,CAACW,IAAI,CAACrB,MAAM;AAC5D,OAAO,MAAMuB,iBAAiB,GAAIb,KAAK,IAAKA,KAAK,CAACW,IAAI,CAACtB,SAAS;AAChE,OAAO,MAAMyB,eAAe,GAAId,KAAK,IAAKA,KAAK,CAACW,IAAI,CAACpB,KAAK;AAC1D,eAAeK,SAAS,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}