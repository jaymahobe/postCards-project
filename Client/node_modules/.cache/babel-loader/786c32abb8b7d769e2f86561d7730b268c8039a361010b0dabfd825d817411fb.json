{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { createUser } from \"./AuthApi\";\nconst initialState = {\n  loggedInUser: null,\n  status: \"idle\"\n};\nexport const createUserAsync = createAsyncThunk(\"auth/createUser\",\n// fetching product for all product page according to pagination, sorting, brand\nasync page => {\n  const response = await createUser(page);\n  return response.data;\n});\nexport const AuthSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(createUserAsync.pending, state => {\n      state.status = \"pending\";\n    }).addCase(createUserAsync.fulfilled, (state, action) => {\n      state.status = \"idle\";\n      state.loggedInUser = action.payload;\n    });\n  }\n});\nexport const selectLoggedInUser = state => state.user.loggedInUser;\nexport default AuthSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","createUser","initialState","loggedInUser","status","createUserAsync","page","response","data","AuthSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","selectLoggedInUser","user","reducer"],"sources":["/Users/jaymahobe/project-js/project-postlist-internsala/app/src/Auth/AuthSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { createUser } from \"./AuthApi\";\nconst initialState = {\n  loggedInUser: null,\n  status: \"idle\",\n};\n\nexport const createUserAsync = createAsyncThunk(\n  \"auth/createUser\",\n  // fetching product for all product page according to pagination, sorting, brand\n  async (page) => {\n    const response = await createUser(page);\n    return response.data;\n  }\n);\n\nexport const AuthSlice = createSlice({\n  name: \"user\",\n  initialState,\n\n  reducers: {},\n\n  extraReducers: (builder) => {\n    builder\n      .addCase(createUserAsync.pending, (state) => {\n        state.status = \"pending\";\n      })\n      .addCase(createUserAsync.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.loggedInUser = action.payload;\n      });\n  },\n});\nexport const selectLoggedInUser = (state) => state.user.loggedInUser;\nexport default AuthSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,UAAU,QAAQ,WAAW;AACtC,MAAMC,YAAY,GAAG;EACnBC,YAAY,EAAE,IAAI;EAClBC,MAAM,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGN,gBAAgB,CAC7C,iBAAiB;AACjB;AACA,MAAOO,IAAI,IAAK;EACd,MAAMC,QAAQ,GAAG,MAAMN,UAAU,CAACK,IAAI,CAAC;EACvC,OAAOC,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGT,WAAW,CAAC;EACnCU,IAAI,EAAE,MAAM;EACZR,YAAY;EAEZS,QAAQ,EAAE,CAAC,CAAC;EAEZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACT,eAAe,CAACU,OAAO,EAAGC,KAAK,IAAK;MAC3CA,KAAK,CAACZ,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDU,OAAO,CAACT,eAAe,CAACY,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACrDF,KAAK,CAACZ,MAAM,GAAG,MAAM;MACrBY,KAAK,CAACb,YAAY,GAAGe,MAAM,CAACC,OAAO;IACrC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AACF,OAAO,MAAMC,kBAAkB,GAAIJ,KAAK,IAAKA,KAAK,CAACK,IAAI,CAAClB,YAAY;AACpE,eAAeM,SAAS,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}