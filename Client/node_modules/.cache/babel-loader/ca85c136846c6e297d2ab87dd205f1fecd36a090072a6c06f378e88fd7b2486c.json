{"ast":null,"code":"var _jsxFileName = \"/Users/jaymahobe/project-js/project-postlist-internsala/app/src/Post/PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchPostsAsync, selectPosts } from \"./PostListSlice\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const posts = useSelector(selectPosts);\n  useEffect(() => {\n    dispatch(fetchPostsAsync());\n  }, [dispatch]);\n  const fetchMoreData = () => {\n    dispatch(fetchPostsAsync());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list\",\n    children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: posts.length,\n      next: fetchMoreData,\n      hasMore: posts.length < 10 // Assuming there's always more data to load\n      ,\n      loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this),\n      endMessage: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Yay! You have seen it all.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this),\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"ENUDqdKwIx40U6eZCutSSehqnb4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchPostsAsync","selectPosts","InfiniteScroll","jsxDEV","_jsxDEV","PostList","_s","dispatch","posts","fetchMoreData","className","children","dataLength","length","next","hasMore","loader","fileName","_jsxFileName","lineNumber","columnNumber","endMessage","style","textAlign","map","post","title","body","id","_c","$RefreshReg$"],"sources":["/Users/jaymahobe/project-js/project-postlist-internsala/app/src/Post/PostList.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchPostsAsync, selectPosts } from \"./PostListSlice\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst PostList = () => {\n  const dispatch = useDispatch();\n  const posts = useSelector(selectPosts);\n\n  useEffect(() => {\n    dispatch(fetchPostsAsync());\n  }, [dispatch]);\n\n  const fetchMoreData = () => {\n    dispatch(fetchPostsAsync());\n  };\n\n  return (\n    <div className=\"post-list\">\n      <InfiniteScroll\n        dataLength={posts.length}\n        next={fetchMoreData}\n        hasMore={posts.length < 10} // Assuming there's always more data to load\n        loader={<h4>Loading...</h4>}\n        endMessage={\n          <p style={{ textAlign: \"center\" }}>Yay! You have seen it all.</p>\n        }\n      >\n        {posts.map((post) => (\n          <div key={post.id} className=\"post\">\n            <h3>{post.title}</h3>\n            <p>{post.body}</p>\n          </div>\n        ))}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default PostList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,eAAe,EAAEC,WAAW,QAAQ,iBAAiB;AAC9D,OAAOC,cAAc,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,KAAK,GAAGT,WAAW,CAACE,WAAW,CAAC;EAEtCJ,SAAS,CAAC,MAAM;IACdU,QAAQ,CAACP,eAAe,CAAC,CAAC,CAAC;EAC7B,CAAC,EAAE,CAACO,QAAQ,CAAC,CAAC;EAEd,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC1BF,QAAQ,CAACP,eAAe,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,oBACEI,OAAA;IAAKM,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBP,OAAA,CAACF,cAAc;MACbU,UAAU,EAAEJ,KAAK,CAACK,MAAO;MACzBC,IAAI,EAAEL,aAAc;MACpBM,OAAO,EAAEP,KAAK,CAACK,MAAM,GAAG,EAAG,CAAC;MAAA;MAC5BG,MAAM,eAAEZ,OAAA;QAAAO,QAAA,EAAI;MAAU;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAE;MAC5BC,UAAU,eACRjB,OAAA;QAAGkB,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAZ,QAAA,EAAC;MAA0B;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACjE;MAAAT,QAAA,EAEAH,KAAK,CAACgB,GAAG,CAAEC,IAAI,iBACdrB,OAAA;QAAmBM,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACjCP,OAAA;UAAAO,QAAA,EAAKc,IAAI,CAACC;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBhB,OAAA;UAAAO,QAAA,EAAIc,IAAI,CAACE;QAAI;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFVK,IAAI,CAACG,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV,CAAC;AAACd,EAAA,CAhCID,QAAQ;EAAA,QACKP,WAAW,EACdC,WAAW;AAAA;AAAA8B,EAAA,GAFrBxB,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}